# Vim-style keybindings for Tig
#
# To use these keybindings copy the file to your HOME directory and include
# it from your ~/.tigrc file:
#
#	$ cp contrib/vim.tigrc ~/.tigrc.vim
#	$ echo "source ~/.tigrc.vim" >> ~/.tigrc

bind generic h scroll-left
bind generic j move-down
bind generic k move-up
bind generic l scroll-right

bind generic g  none
bind generic gg move-first-line
bind generic gj next
bind generic gk previous
bind generic gp parent
bind generic gP back
bind generic gn view-next

bind main    G move-last-line
bind generic G move-last-line

bind generic <C-f> move-page-down
bind generic <C-b> move-page-up

bind generic v  none
bind generic vm view-main
bind generic vd view-diff
bind generic vl view-log
bind generic vt view-tree
bind generic vb view-blob
bind generic vx view-blame
bind generic vr view-refs
bind generic vs view-status
bind generic vu view-stage
bind generic vy view-stash
bind generic vg view-grep
bind generic vp view-pager
bind generic vh view-help

bind generic o  none
bind generic oo :toggle sort-order
bind generic os :toggle sort-field
bind generic on :toggle line-number
bind generic od :toggle date
bind generic oa :toggle author
bind generic og :toggle line-graphics
bind generic of :toggle file-name
bind generic op :toggle ignore-space
bind generic oi :toggle id
bind generic ot :toggle commit-title-overflow
bind generic oF :toggle file-filter
bind generic or :toggle commit-title-refs

bind generic @  none
bind generic @j :/^@@
bind generic @k :?^@@
bind generic @- :toggle diff-context -1
bind generic @+ :toggle diff-context +1

bind generic u none
bind generic uu status-update
bind generic ur status-revert
bind generic um status-merge
bind generic ul stage-update-line
bind generic up stage-update-part
bind generic us stage-split-chunk

bind generic c  none
bind generic cc !git commit
bind generic ca !?@git commit --amend --no-edit

bind generic K view-help
bind generic <C-w><C-w> view-next

#------------ end of https://github.com/jonas/tig/blob/master/contrib/vim.tigrc (Feb 7, 2021) --------------
# the built-in config is:
#     <INSTALL_DIR>/share/tig/examples/tigrc
#     https://github.com/jonas/tig/blob/master/tigrc

# --------------------------------- some keymap not in help ----------------------------------
# (1) In blame view:
# - Go to the parent commit of a given line: (, key)
# - Go backwards of the navigate history: (<  key, i.e. Shift + ,)

# Same key in the main view for commit tree when run `tig --all`:
# - Go to parent commit: (, key)
# - Go backwards of the navigate history: (<  key, i.e. Shift + ,)

# (2) In status view:
# Stage a single line:
# 		bind stage 1 stage-update-line
# Stage/unstage part of chunk:
# 		bind stage 2 stage-update-part

# -------------------------------------- My config -------------------------------------------
# blue is not clear in iterm2 dark mode, set No Blue Color SCheme
# change iterm2 setting: Profile > Colors > Color Presets to other (e.g. Atom)
# or change color setting in tigrc
#source -q ~/.noblue_colorscheme.tigrc

# set format for some views
set main-view-author = abbreviated

# set smart case when searching: ignore case when the search string is lower-case only.
set ignore-case = smart-case
set tab-size = 4

#set mouse = true
#set mouse-scroll = 5
#set mouse-wheel-cursor = true

# set diff format highlight, firstly install:
# > cp /usr/local/Cellar/git/2.26.2/share/git-core/contrib/diff-highlight/diff-highlight /usr/local/bin/
set diff-highlight = true

# custom diff formatters
bind generic cd >sh -c "GIT_EXTERNAL_DIFF=difft git show %(commit) --ext-diff"

# ------------------------------------- key mapping -----------------------------------------
bind generic <F1> view-help

# Option: Wrap long lines instead of horizontal scrolling
bind generic ow :toggle wrap-lines
# Option: date/author-date/topo/reverse, ref to git-log option
bind generic oc :toggle commit-order

# jump easily between diff/status view to the history of the file: follow the moved/renamed file
bind diff H !sh -c "tig --follow %(file)"
bind status H !sh -c "tig --follow %(file)"

# The diff view show diff between below 2 file contents, sometime need to copy one of them, so add below key maps
# 1) look at file content: the file from argument at a revisions:
#   1.1) Only works in cmd like: tig path/to/file, or hit "H" as key mapping oboveï¼Œthen hit 'Vf'
#   1.2) This is same as hit `f` in the tig diff view when cursor on specific file diff region
bind generic Vf !sh -c 'git show $1:$2$3' -- %(commit) %(repo:prefix) %(fileargs)
# 2) look at file content: the parent commit of this selected file at cursor
bind generic Vp !sh -c 'git show $1:$2' -- %(commit)^ %(file)

################ Added from: https://github.com/jonas/tig/wiki/Bindings (Jan 28, 2023) ################

# Add/edit notes for the current commit used during a review
bind generic <C-T> !git notes edit %(commit)

# Open the commit on Github: xdg-open on linux; open on macos
bind generic <F2> @sh -c "open 'https://'$(git remote -v | grep -Eo '(github.com|bitbucket.org|code.hashdata.xyz)[:/][^.]+' | head -1 | tr : /)'/commit/%(commit)'"

# Amend last commit
bind generic cl !git commit --amend

# Interactive rebase
bind main <C-X> !git rebase -i %(commit)
# Revert
bind main ! !git revert %(commit)
# Tag the selected commit
bind main T !@git tag "%(prompt Tag the selected commit | Enter tag name: )" %(commit)

# Intent to add: might be useful if you want to add-patch a newly created file
bind status <C-A> !@git add -N %(file)
# Stash the unstaged changes
bind status <C-S> !?git stash save --keep-index "%(prompt Stash save indexed changes | Enter stash message: )"
# Delete a file: <C-D> is used as half page down
bind status D !@?rm %(file)
# Restore a file at worktree
bind status <C-R> !@?git restore --worktree %(file)

# Create a new branch, not bind n/N key because it conflict with find next match key
bind refs <C-A> !@git branch "%(prompt Create a new branch | Enter branch name: )"

# Compare changed file in status view
bind status <F4> !sh -c "git difftool -y \"$(git rev-parse --show-toplevel)/%(file)\""
# Compare selected commit in log view (main view) with its parent
bind main <F4> !git difftool -d %(commit)^!
bind diff <F4> !git difftool %(commit) -- %(file)
bind log <F4> !git difftool %(commit) -- %(file)

